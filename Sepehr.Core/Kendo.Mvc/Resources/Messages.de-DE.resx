<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Editor_BackColor" xml:space="preserve">
    <value>Hintergrundfarbe</value>
  </data>
  <data name="Editor_Bold" xml:space="preserve">
    <value>Fett</value>
  </data>
  <data name="Editor_CreateLink" xml:space="preserve">
    <value>Hyperlink einfügen</value>
  </data>
  <data name="Editor_DeleteFile" xml:space="preserve">
    <value>Are you sure you want to delete "{0}"?</value>
  </data>
  <data name="Editor_DialogButtonSeparator" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="Editor_DialogCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Editor_DialogInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="Editor_DirectoryNotFound" xml:space="preserve">
    <value>A directory with this name was not found.</value>
  </data>
  <data name="Editor_EmptyFolder" xml:space="preserve">
    <value>Empty Folder</value>
  </data>
  <data name="Editor_FontName" xml:space="preserve">
    <value>Schriftfamilie</value>
  </data>
  <data name="Editor_FontNameInherit" xml:space="preserve">
    <value>(Schrift übernehmen)</value>
  </data>
  <data name="Editor_FontSize" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="Editor_FontSizeInherit" xml:space="preserve">
    <value>(Größe übernehmen)</value>
  </data>
  <data name="Editor_ForeColor" xml:space="preserve">
    <value>Farbe</value>
  </data>
  <data name="Editor_FormatBlock" xml:space="preserve">
    <value>Absatzstil</value>
  </data>
  <data name="Editor_ImageAltText" xml:space="preserve">
    <value>Alternate text</value>
  </data>
  <data name="Editor_ImageWebAddress" xml:space="preserve">
    <value>Web address</value>
  </data>
  <data name="Editor_Indent" xml:space="preserve">
    <value>Einzug vergrößern</value>
  </data>
  <data name="Editor_InsertHtml" xml:space="preserve">
    <value>HTML einfügen</value>
  </data>
  <data name="Editor_InsertImage" xml:space="preserve">
    <value>Einfügen Bild</value>
  </data>
  <data name="Editor_InsertOrderedList" xml:space="preserve">
    <value>Numerierte Liste</value>
  </data>
  <data name="Editor_InsertUnorderedList" xml:space="preserve">
    <value>Aufzählliste</value>
  </data>
  <data name="Editor_InvalidFileType" xml:space="preserve">
    <value>The selected file "{0}" is not valid. Supported file types are {1}.</value>
  </data>
  <data name="Editor_Italic" xml:space="preserve">
    <value>Kursiv</value>
  </data>
  <data name="Editor_JustifyCenter" xml:space="preserve">
    <value>Zentriert</value>
  </data>
  <data name="Editor_JustifyFull" xml:space="preserve">
    <value>Ausrichten</value>
  </data>
  <data name="Editor_JustifyLeft" xml:space="preserve">
    <value>Linksbündig</value>
  </data>
  <data name="Editor_JustifyRight" xml:space="preserve">
    <value>Rechtsbündig</value>
  </data>
  <data name="Editor_LinkOpenInNewWindow" xml:space="preserve">
    <value>Open link in new window</value>
  </data>
  <data name="Editor_LinkText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Editor_LinkToolTip" xml:space="preserve">
    <value>ToolTip</value>
  </data>
  <data name="Editor_LinkWebAddress" xml:space="preserve">
    <value>Web address</value>
  </data>
  <data name="Editor_OrderBy" xml:space="preserve">
    <value>Arrange by:</value>
  </data>
  <data name="Editor_OrderByName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Editor_OrderBySize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Editor_Outdent" xml:space="preserve">
    <value>Einzug verkleinern</value>
  </data>
  <data name="Editor_OverwriteFile" xml:space="preserve">
    <value>A file with name "{0}" already exists in the current directory. Do you want to overwrite it?</value>
  </data>
  <data name="Editor_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Editor_Strikethrough" xml:space="preserve">
    <value>Durchgestrichen</value>
  </data>
  <data name="Editor_Styles" xml:space="preserve">
    <value>Stil</value>
  </data>
  <data name="Editor_Subscript" xml:space="preserve">
    <value>Tiefgestellt</value>
  </data>
  <data name="Editor_Superscript" xml:space="preserve">
    <value>Hochgestellt</value>
  </data>
  <data name="Editor_Underline" xml:space="preserve">
    <value>Unterstrichen</value>
  </data>
  <data name="Editor_Unlink" xml:space="preserve">
    <value>Hyperlink entfernen</value>
  </data>
  <data name="Editor_UploadFile" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="Filter_And" xml:space="preserve">
    <value>Und</value>
  </data>
  <data name="Filter_Clear" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Filter_DateIsEqualTo" xml:space="preserve">
    <value>Ist gleich</value>
  </data>
  <data name="Filter_DateIsGreaterThan" xml:space="preserve">
    <value>Ist nach</value>
  </data>
  <data name="Filter_DateIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Ist nach oder gleich</value>
  </data>
  <data name="Filter_DateIsLessThan" xml:space="preserve">
    <value>Ist vor</value>
  </data>
  <data name="Filter_DateIsLessThanOrEqualTo" xml:space="preserve">
    <value>Ist vor oder gleich</value>
  </data>
  <data name="Filter_DateIsNotEqualTo" xml:space="preserve">
    <value>Ist nicht gleich</value>
  </data>
  <data name="Filter_EnumIsEqualTo" xml:space="preserve">
    <value>Ist gleich</value>
  </data>
  <data name="Filter_EnumIsNotEqualTo" xml:space="preserve">
    <value>Ist nicht gleich</value>
  </data>
  <data name="Filter_Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Filter_Info" xml:space="preserve">
    <value>Zeigt Zeilen mit Werten, die</value>
  </data>
  <data name="Filter_IsFalse" xml:space="preserve">
    <value>ist falsch</value>
  </data>
  <data name="Filter_IsTrue" xml:space="preserve">
    <value>ist richtig</value>
  </data>
  <data name="Filter_NumberIsEqualTo" xml:space="preserve">
    <value>Ist gleich</value>
  </data>
  <data name="Filter_NumberIsGreaterThan" xml:space="preserve">
    <value>Ist größer als</value>
  </data>
  <data name="Filter_NumberIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>Ist größer als oder gleich</value>
  </data>
  <data name="Filter_NumberIsLessThan" xml:space="preserve">
    <value>Ist kleiner</value>
  </data>
  <data name="Filter_NumberIsLessThanOrEqualTo" xml:space="preserve">
    <value>Ist kleiner als oder gleich</value>
  </data>
  <data name="Filter_NumberIsNotEqualTo" xml:space="preserve">
    <value>Ist nicht gleich</value>
  </data>
  <data name="Filter_Or" xml:space="preserve">
    <value>Oder</value>
  </data>
  <data name="Filter_SelectValue" xml:space="preserve">
    <value>-Wählen Sie-</value>
  </data>
  <data name="Filter_StringContains" xml:space="preserve">
    <value>Beinhaltet</value>
  </data>
  <data name="Filter_StringEndsWith" xml:space="preserve">
    <value>Endet mit</value>
  </data>
  <data name="Filter_StringIsEqualTo" xml:space="preserve">
    <value>Ist gleich</value>
  </data>
  <data name="Filter_StringIsNotEqualTo" xml:space="preserve">
    <value>Ist nicht gleich</value>
  </data>
  <data name="Filter_StringStartsWith" xml:space="preserve">
    <value>Beginnt mit</value>
  </data>
  <data name="Grid_Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="Grid_CancelChanges" xml:space="preserve">
    <value>Änderungen verwerfen</value>
  </data>
  <data name="Grid_Columns" xml:space="preserve">
    <value>Spalten</value>
  </data>
  <data name="Grid_Confirmation" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie diesen Datensatz löschen wollen?</value>
  </data>
  <data name="Grid_Create" xml:space="preserve">
    <value>Neuen Datensatz hinzufügen</value>
  </data>
  <data name="Grid_Destroy" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Grid_Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Grid_SaveChanges" xml:space="preserve">
    <value>Änderungen speichern</value>
  </data>
  <data name="Grid_Select" xml:space="preserve">
    <value>Wähle</value>
  </data>
  <data name="Grid_SortAscending" xml:space="preserve">
    <value>Aufsteigend sortieren</value>
  </data>
  <data name="Grid_SortDescending" xml:space="preserve">
    <value>Absteigend sortieren</value>
  </data>
  <data name="Grid_Update" xml:space="preserve">
    <value>Aktualisiere</value>
  </data>
  <data name="Group_Empty" xml:space="preserve">
    <value>Ziehen Sie eine Spaltenüberschrift hierher, um nach dieser Spalte zu gruppieren</value>
  </data>
  <data name="Pager_Display" xml:space="preserve">
    <value>Anzeigen der Elemente {0} - {1} von {2}</value>
  </data>
  <data name="Pager_Empty" xml:space="preserve">
    <value>keine Daten</value>
  </data>
  <data name="Pager_First" xml:space="preserve">
    <value>Gehen Sie zur ersten Seite</value>
  </data>
  <data name="Pager_ItemsPerPage" xml:space="preserve">
    <value>Elemente pro Seite</value>
  </data>
  <data name="Pager_Last" xml:space="preserve">
    <value>Gehen Sie zur letzten Seite</value>
  </data>
  <data name="Pager_Next" xml:space="preserve">
    <value>Gehen Sie zur nächsten Seite</value>
  </data>
  <data name="Pager_Of" xml:space="preserve">
    <value>von {0}</value>
  </data>
  <data name="Pager_Page" xml:space="preserve">
    <value>Seite</value>
  </data>
  <data name="Pager_Previous" xml:space="preserve">
    <value>Gehen Sie zur vorherigen Seite</value>
  </data>
  <data name="Pager_Refresh" xml:space="preserve">
    <value>Aktualisieren</value>
  </data>
  <data name="Upload_Cancel" xml:space="preserve">
    <value>Beenden</value>
  </data>
  <data name="Upload_DropFilesHere" xml:space="preserve">
    <value>Droppen Sie Feile hier zum hochladen</value>
  </data>
  <data name="Upload_Remove" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Upload_Retry" xml:space="preserve">
    <value>Wiederholen</value>
  </data>
  <data name="Upload_Select" xml:space="preserve">
    <value>Wählen Sie...</value>
  </data>
  <data name="Upload_StatusFailed" xml:space="preserve">
    <value>nicht erfolgreich</value>
  </data>
  <data name="Upload_StatusUploaded" xml:space="preserve">
    <value>hochgeladet</value>
  </data>
  <data name="Upload_StatusUploading" xml:space="preserve">
    <value>hochladen</value>
  </data>
  <data name="Upload_UploadSelectedFiles" xml:space="preserve">
    <value>Feile hochladen</value>
  </data>
</root>