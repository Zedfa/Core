<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Grid_Create" xml:space="preserve">
    <value>Inserir</value>
  </data>
  <data name="Grid_Destroy" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="Grid_Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Grid_Update" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="Grid_Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Grid_Select" xml:space="preserve">
    <value>Selecionar</value>
  </data>
  <data name="Pager_Page" xml:space="preserve">
    <value>Página </value>
  </data>
  <data name="Pager_Display" xml:space="preserve">
    <value>Exibindo itens {0} - {1} de {2}</value>
  </data>
  <data name="Pager_Of" xml:space="preserve">
    <value>de {0}</value>
  </data>
  <data name="Filter_Filter" xml:space="preserve">
    <value>Filtro</value>
  </data>
  <data name="Filter_And" xml:space="preserve">
    <value>E</value>
  </data>
  <data name="Filter_Clear" xml:space="preserve">
    <value>Limpar Filtro</value>
  </data>
  <data name="Filter_DateIsEqualTo" xml:space="preserve">
    <value>É igual a</value>
  </data>
  <data name="Filter_DateIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>É posterior ou igual a</value>
  </data>
  <data name="Filter_DateIsGreaterThan" xml:space="preserve">
    <value>É posterior a</value>
  </data>
  <data name="Filter_DateIsLessThanOrEqualTo" xml:space="preserve">
    <value>É anterior ou igual a</value>
  </data>
  <data name="Filter_DateIsLessThan" xml:space="preserve">
    <value>É anterior a</value>
  </data>
  <data name="Filter_DateIsNotEqualTo" xml:space="preserve">
    <value>Não é igual a</value>
  </data>
  <data name="Filter_NumberIsEqualTo" xml:space="preserve">
    <value>É igual a</value>
  </data>
  <data name="Filter_NumberIsGreaterThanOrEqualTo" xml:space="preserve">
    <value>É maior que ou igual a</value>
  </data>
  <data name="Filter_NumberIsGreaterThan" xml:space="preserve">
    <value>É maior que</value>
  </data>
  <data name="Filter_NumberIsLessThanOrEqualTo" xml:space="preserve">
    <value>É menor que ou igual a</value>
  </data>
  <data name="Filter_NumberIsLessThan" xml:space="preserve">
    <value>É menor que</value>
  </data>
  <data name="Filter_NumberIsNotEqualTo" xml:space="preserve">
    <value>Não é igual a</value>
  </data>
  <data name="Filter_Info" xml:space="preserve">
    <value>Exibir linhas com valores que</value>
  </data>
  <data name="Filter_StringEndsWith" xml:space="preserve">
    <value>Termina com</value>
  </data>
  <data name="Filter_StringIsEqualTo" xml:space="preserve">
    <value>É igual a</value>
  </data>
  <data name="Filter_StringIsNotEqualTo" xml:space="preserve">
    <value>Não é igual a</value>
  </data>
  <data name="Filter_StringStartsWith" xml:space="preserve">
    <value>Começa com</value>
  </data>
  <data name="Filter_StringContains" xml:space="preserve">
    <value>Contem</value>
  </data>
  <data name="Group_Empty" xml:space="preserve">
    <value>Arraste aqui o cabeçalho de uma coluna para agrupar por esta coluna</value>
  </data>
  <data name="Filter_EnumIsEqualTo" xml:space="preserve">
    <value>É igual a</value>
  </data>
  <data name="Filter_EnumIsNotEqualTo" xml:space="preserve">
    <value>Não é igual a</value>
  </data>
  <data name="Grid_Confirmation" xml:space="preserve">
    <value>Você tem certeza que deseja excluir este registro?</value>
  </data>
  <data name="Filter_IsFalse" xml:space="preserve">
    <value>É falsa</value>
  </data>
  <data name="Filter_IsTrue" xml:space="preserve">
    <value>É verdade</value>
  </data>
  <data name="Pager_Empty" xml:space="preserve">
    <value>Nenhum registro encontrado.</value>
  </data>
  <data name="Grid_CancelChanges" xml:space="preserve">
    <value>Cancelar alterações</value>
  </data>
  <data name="Grid_SaveChanges" xml:space="preserve">
    <value>Salvar alterações</value>
  </data>
  <data name="Pager_Refresh" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="Filter_StringDoesNotContain" xml:space="preserve">
    <value>Contains no</value>
  </data>
  <data name="Filter_Or" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="Editor_Bold" xml:space="preserve">
    <value>Negrito</value>
  </data>
  <data name="Editor_CreateLink" xml:space="preserve">
    <value>Adicionar Link</value>
  </data>
  <data name="Editor_FontName" xml:space="preserve">
    <value>Fonte</value>
  </data>
  <data name="Editor_FontNameInherit" xml:space="preserve">
    <value>(inherited font)</value>
  </data>
  <data name="Editor_FontSize" xml:space="preserve">
    <value>Tamanho</value>
  </data>
  <data name="Editor_FontSizeInherit" xml:space="preserve">
    <value>(inherited size)</value>
  </data>
  <data name="Editor_FormatBlock" xml:space="preserve">
    <value>Formatar Bloco</value>
  </data>
  <data name="Editor_Indent" xml:space="preserve">
    <value>Aumentar Recuo</value>
  </data>
  <data name="Editor_InsertHtml" xml:space="preserve">
    <value>Inserir HTML</value>
  </data>
  <data name="Editor_InsertImage" xml:space="preserve">
    <value>Inserir Imagem</value>
  </data>
  <data name="Editor_InsertOrderedList" xml:space="preserve">
    <value>Inserir Lista Ordenada</value>
  </data>
  <data name="Editor_InsertUnorderedList" xml:space="preserve">
    <value>Inserir Lista Aleatória</value>
  </data>
  <data name="Editor_Italic" xml:space="preserve">
    <value>Itálico</value>
  </data>
  <data name="Editor_JustifyCenter" xml:space="preserve">
    <value>Alinhar Centro</value>
  </data>
  <data name="Editor_JustifyFull" xml:space="preserve">
    <value>Justificar</value>
  </data>
  <data name="Editor_JustifyLeft" xml:space="preserve">
    <value>Alinhar à Esquerda</value>
  </data>
  <data name="Editor_JustifyRight" xml:space="preserve">
    <value>Alinhar à Direita</value>
  </data>
  <data name="Editor_Outdent" xml:space="preserve">
    <value>Diminuir Recuo</value>
  </data>
  <data name="Editor_Strikethrough" xml:space="preserve">
    <value>Tachado</value>
  </data>
  <data name="Editor_Styles" xml:space="preserve">
    <value>Estilo</value>
  </data>
  <data name="Editor_Subscript" xml:space="preserve">
    <value>Subscript</value>
  </data>
  <data name="Editor_Superscript" xml:space="preserve">
    <value>Superscript</value>
  </data>
  <data name="Editor_Underline" xml:space="preserve">
    <value>Remover Link</value>
  </data>
  <data name="Editor_Unlink" xml:space="preserve">
    <value>Remove hyperlink</value>
  </data>
  <data name="Pager_First" xml:space="preserve">
    <value>Ir para a primeira página</value>
  </data>
  <data name="Pager_ItemsPerPage" xml:space="preserve">
    <value>itens por página</value>
  </data>
  <data name="Pager_Last" xml:space="preserve">
    <value>Ir para a última página</value>
  </data>
  <data name="Pager_Next" xml:space="preserve">
    <value>Ir para a próxima página</value>
  </data>
  <data name="Pager_Previous" xml:space="preserve">
    <value>Vá para a página anterior</value>
  </data>
  <data name="Upload_Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Upload_DropFilesHere" xml:space="preserve">
    <value>arraste arquivos para este espaço para enviar</value>
  </data>
  <data name="Upload_Remove" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="Upload_Retry" xml:space="preserve">
    <value>Tentar novamente</value>
  </data>
  <data name="Upload_Select" xml:space="preserve">
    <value>Selecionar...</value>
  </data>
  <data name="Upload_StatusFailed" xml:space="preserve">
    <value>falhou</value>
  </data>
  <data name="Upload_StatusUploaded" xml:space="preserve">
    <value>enviado</value>
  </data>
  <data name="Upload_StatusUploading" xml:space="preserve">
    <value>enviando</value>
  </data>
  <data name="Upload_UploadSelectedFiles" xml:space="preserve">
    <value>Enviar arquivos</value>
  </data>
  <data name="Grid_Columns" xml:space="preserve">
    <value>Colunas</value>
  </data>
  <data name="Grid_SortAscending" xml:space="preserve">
    <value>Ordenar Ascendente</value>
  </data>
  <data name="Grid_SortDescending" xml:space="preserve">
    <value>Ordenar Descendente</value>
  </data>
  <data name="Editor_DeleteFile" xml:space="preserve">
    <value>Tem certeza de que deseja remover "{0}"?</value>
  </data>
  <data name="Editor_DirectoryNotFound" xml:space="preserve">
    <value>Um diretório com este nome não foi encontrado.</value>
  </data>
  <data name="Editor_EmptyFolder" xml:space="preserve">
    <value>Pasta vazia</value>
  </data>
  <data name="Editor_InvalidFileType" xml:space="preserve">
    <value>O arquivo selecionado "{0}" não é válido. Os tipos de arquivo suportados são {1}.</value>
  </data>
  <data name="Editor_OrderBy" xml:space="preserve">
    <value>Ordenar por:</value>
  </data>
  <data name="Editor_OrderByName" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="Editor_OrderBySize" xml:space="preserve">
    <value>Tamanho</value>
  </data>
  <data name="Editor_OverwriteFile" xml:space="preserve">
    <value>Um arquivo de nome "{0}" já existe no diretório atual. Deseja substituí-lo?</value>
  </data>
  <data name="Editor_UploadFile" xml:space="preserve">
    <value>Enviar arquivo</value>
  </data>
  <data name="Editor_BackColor" xml:space="preserve">
    <value>Cor de Fundo</value>
  </data>
  <data name="Editor_ForeColor" xml:space="preserve">
    <value>Cor</value>
  </data>
  <data name="Editor_DialogButtonSeparator" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="Editor_DialogCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Editor_DialogInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="Editor_ImageAltText" xml:space="preserve">
    <value>Alternate text</value>
  </data>
  <data name="Editor_ImageWebAddress" xml:space="preserve">
    <value>Web address</value>
  </data>
  <data name="Editor_LinkOpenInNewWindow" xml:space="preserve">
    <value>Open link in new window</value>
  </data>
  <data name="Editor_LinkText" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Editor_LinkToolTip" xml:space="preserve">
    <value>ToolTip</value>
  </data>
  <data name="Editor_LinkWebAddress" xml:space="preserve">
    <value>Web address</value>
  </data>
  <data name="Editor_Search" xml:space="preserve">
    <value>Search</value>
  </data>
</root>